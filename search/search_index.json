{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Chiro (UE4 Mannequin) \"Chiro (UE4 Mannequin)\" is a Blender add-on for skinning with Unreal Engine 4 Mannequin armature. Who is it for 3D Artists , who want to skin their characters with the Mannequin skeleton Indie Game Developers , who want an easy way to swap an armature of a mesh with the Mannequin skeleton Why we need it animation created for Mannequin may be reused blueprints created for Mannequin may be reused Mannequin skeleton may be reused What it gives you Free software (as in freedom) Skinning with Mannequin compatible armatures FBX export made easy (with correct scale) Mixamo to Mannequin skeleton transformations automation A bunch of automations What it does not do The primary goal of this add-on is to make Skinning easy. If you need to animate your characters, you should consider using EpicGames Blender Tools for that (e.g. Unreal to Rigify). Blender compatibility Requires 2.8x Tested with 2.83 LTS Found a bug? Create a new GitHub Issue . Need help? Try asking in the chiro-ue4:matrix.org matrix channel, or raise a GitHub issue . Want to help? We believe that artists should have access to free (as in freedom) and open-source software of high quality. If you want to support our cause, you could Give us a star on GitHub Let us know how we could make it better via GitHub Issues Tell others about the add-on and what it does Want to buy us coffee or donate for the cause? Ko-fi (less commission) PayPal Good luck! We wish this project can serve you well, creative person. Go, make the world a little better!","title":"Home"},{"location":"#chiro-ue4-mannequin","text":"\"Chiro (UE4 Mannequin)\" is a Blender add-on for skinning with Unreal Engine 4 Mannequin armature.","title":"Chiro (UE4 Mannequin)"},{"location":"#who-is-it-for","text":"3D Artists , who want to skin their characters with the Mannequin skeleton Indie Game Developers , who want an easy way to swap an armature of a mesh with the Mannequin skeleton","title":"Who is it for"},{"location":"#why-we-need-it","text":"animation created for Mannequin may be reused blueprints created for Mannequin may be reused Mannequin skeleton may be reused","title":"Why we need it"},{"location":"#what-it-gives-you","text":"Free software (as in freedom) Skinning with Mannequin compatible armatures FBX export made easy (with correct scale) Mixamo to Mannequin skeleton transformations automation A bunch of automations","title":"What it gives you"},{"location":"#what-it-does-not-do","text":"The primary goal of this add-on is to make Skinning easy. If you need to animate your characters, you should consider using EpicGames Blender Tools for that (e.g. Unreal to Rigify).","title":"What it does not do"},{"location":"#blender-compatibility","text":"Requires 2.8x Tested with 2.83 LTS","title":"Blender compatibility"},{"location":"#found-a-bug","text":"Create a new GitHub Issue .","title":"Found a bug?"},{"location":"#need-help","text":"Try asking in the chiro-ue4:matrix.org matrix channel, or raise a GitHub issue .","title":"Need help?"},{"location":"#want-to-help","text":"We believe that artists should have access to free (as in freedom) and open-source software of high quality. If you want to support our cause, you could Give us a star on GitHub Let us know how we could make it better via GitHub Issues Tell others about the add-on and what it does","title":"Want to help?"},{"location":"#want-to-buy-us-coffee-or-donate-for-the-cause","text":"Ko-fi (less commission) PayPal","title":"Want to buy us coffee or donate for the cause?"},{"location":"#good-luck","text":"We wish this project can serve you well, creative person. Go, make the world a little better!","title":"Good luck!"},{"location":"add-armature/","text":"Add Armature Mannequin A-Pose Object mode -> Add -> Armature -> Chiro (UE4 Mannequin) -> A-Pose Mannequin T-Pose Object mode -> Add -> Armature -> Chiro (UE4 Mannequin) -> T-Pose Mannequin Twist bones Generates Mannequin-compatible Twist bones on the armature trying to guess the correct length and rotation. Does nothing for existing twist bones. Object mode -> Add -> Armature -> Chiro (UE4 Mannequin) -> Twist Bones Mannequin IK bones (Advanced) Generates Mannequin-compatible IK bones on the armature trying to guess the correct length and rotation. Does nothing for existing IK bones. Object mode -> Add -> Armature -> Chiro (UE4 Mannequin) -> IK Bones The Origin (Advanced) The original Mannequin armature (imported with XY axis) Object mode -> Add -> Armature -> Chiro (UE4 Mannequin) -> The Origin","title":"Add Armature"},{"location":"add-armature/#add-armature","text":"","title":"Add Armature"},{"location":"add-armature/#mannequin-a-pose","text":"Object mode -> Add -> Armature -> Chiro (UE4 Mannequin) -> A-Pose","title":"Mannequin A-Pose"},{"location":"add-armature/#mannequin-t-pose","text":"Object mode -> Add -> Armature -> Chiro (UE4 Mannequin) -> T-Pose","title":"Mannequin T-Pose"},{"location":"add-armature/#mannequin-twist-bones","text":"Generates Mannequin-compatible Twist bones on the armature trying to guess the correct length and rotation. Does nothing for existing twist bones. Object mode -> Add -> Armature -> Chiro (UE4 Mannequin) -> Twist Bones","title":"Mannequin Twist bones"},{"location":"add-armature/#mannequin-ik-bones-advanced","text":"Generates Mannequin-compatible IK bones on the armature trying to guess the correct length and rotation. Does nothing for existing IK bones. Object mode -> Add -> Armature -> Chiro (UE4 Mannequin) -> IK Bones","title":"Mannequin IK bones (Advanced)"},{"location":"add-armature/#the-origin-advanced","text":"The original Mannequin armature (imported with XY axis) Object mode -> Add -> Armature -> Chiro (UE4 Mannequin) -> The Origin","title":"The Origin (Advanced)"},{"location":"add-mesh/","text":"Add Mesh Mannequin A-Pose Object mode -> Add -> Mesh -> Chiro (UE4 Mannequin) -> A-Pose Mannequin T-Pose Object mode -> Add -> Mesh -> Chiro (UE4 Mannequin) -> T-Pose","title":"Add Mesh"},{"location":"add-mesh/#add-mesh","text":"","title":"Add Mesh"},{"location":"add-mesh/#mannequin-a-pose","text":"Object mode -> Add -> Mesh -> Chiro (UE4 Mannequin) -> A-Pose","title":"Mannequin A-Pose"},{"location":"add-mesh/#mannequin-t-pose","text":"Object mode -> Add -> Mesh -> Chiro (UE4 Mannequin) -> T-Pose","title":"Mannequin T-Pose"},{"location":"add-skeletal-mesh/","text":"Add Skeletal Mesh A skeletal mesh is a mesh parented with an armature Mannequin A-Pose Object mode -> Add -> Chiro (UE4) -> Mannequin A-Pose (Skeletal Mesh) Mannequin T-Pose Object mode -> Add -> Chiro (UE4) -> Mannequin T-Pose (Skeletal Mesh)","title":"Add Skeletal Mesh"},{"location":"add-skeletal-mesh/#add-skeletal-mesh","text":"A skeletal mesh is a mesh parented with an armature","title":"Add Skeletal Mesh"},{"location":"add-skeletal-mesh/#mannequin-a-pose","text":"Object mode -> Add -> Chiro (UE4) -> Mannequin A-Pose (Skeletal Mesh)","title":"Mannequin A-Pose"},{"location":"add-skeletal-mesh/#mannequin-t-pose","text":"Object mode -> Add -> Chiro (UE4) -> Mannequin T-Pose (Skeletal Mesh)","title":"Mannequin T-Pose"},{"location":"apply-pose-to-mesh/","text":"Apply Pose to Mesh & as Rest Why we need it? If you perform the original \"Apply Pose as Rest Pose\" instead, your mesh will stay in its original pose.","title":"Apply Pose to Mesh & as Rest"},{"location":"apply-pose-to-mesh/#apply-pose-to-mesh-as-rest","text":"","title":"Apply Pose to Mesh &amp; as Rest"},{"location":"apply-pose-to-mesh/#why-we-need-it","text":"If you perform the original \"Apply Pose as Rest Pose\" instead, your mesh will stay in its original pose.","title":"Why we need it?"},{"location":"edit-armature/","text":"Edit Armature Edit mode with an armature active Transformations The list of available transformations depend on the active armature. The addon reads the active armature structure and tries to detect a known model (e.g. Mannequin or Mixamo). Unknown armature By default (for a single bone in this example), no transformations will be available (thus, empty menu). Edit mode -> Armature -> Chiro (UE4) -> ... Mixamo armature Skeleton conversion Rename the bones to their Mannequin counterparts. Delete redundant leaf bones. Edit mode -> Armature -> Chiro (UE4) -> \"Mixamo --> Skeleton conversion\" Mannequin armature Connect the bones with children Leaving the bone heads in place, connects the tails to the children where it makes sense, to follow the Mannequin skeleton structure. Edit mode -> Armature -> Chiro (UE4) -> \"Mannequin --> Connect the bones with children\" Snap clavicles to Mannequin position Moves clavicle heads to positions simiral to Mannequin, calculated relatively to \"spine_03\" bone. Edit mode -> Armature -> Chiro (UE4) -> \"Mannequin --> Snap clavicles to Mannequin position\" Make twist bones Generates Mannequin twist bones. Calculates length and positions relatively to the parent bones. Does nothing for existing twist bones. Edit mode -> Armature -> Chiro (UE4) -> \"Mannequin --> Make twist bones\" Bone Roll T-Pose Corrects the bone rolls to follow the Mannequin armature composition. Assumes the Mesh is T-Pose. WARNING : if your mesh is not in T-Pose, the rolls will not be correct Edit mode -> Armature -> Chiro (UE4) -> \"Mannequin --> Bone Roll T-Pose\" Bone Roll A-Pose (Advanced) Corrects the bone rolls to follow the Mannequin armature composition. Assumes the Mesh is Mannequin A-Pose. WARNING : if your mesh is not in A-Pose, the rolls will not be correct Make IK bones (Advanced) Generates IK bones for the armature. Same as Add Armature -> Mannequin IK Bones Chiropract on Armature (Advanced) Corrects the bone arrangement so that it follows The Original Mannequin armature. After this operation the character may be exported to FBX (with YX axis).","title":"Edit Armature"},{"location":"edit-armature/#edit-armature","text":"Edit mode with an armature active","title":"Edit Armature"},{"location":"edit-armature/#transformations","text":"The list of available transformations depend on the active armature. The addon reads the active armature structure and tries to detect a known model (e.g. Mannequin or Mixamo).","title":"Transformations"},{"location":"edit-armature/#unknown-armature","text":"By default (for a single bone in this example), no transformations will be available (thus, empty menu). Edit mode -> Armature -> Chiro (UE4) -> ...","title":"Unknown armature"},{"location":"edit-armature/#mixamo-armature","text":"","title":"Mixamo armature"},{"location":"edit-armature/#skeleton-conversion","text":"Rename the bones to their Mannequin counterparts. Delete redundant leaf bones. Edit mode -> Armature -> Chiro (UE4) -> \"Mixamo --> Skeleton conversion\"","title":"Skeleton conversion"},{"location":"edit-armature/#mannequin-armature","text":"","title":"Mannequin armature"},{"location":"edit-armature/#connect-the-bones-with-children","text":"Leaving the bone heads in place, connects the tails to the children where it makes sense, to follow the Mannequin skeleton structure. Edit mode -> Armature -> Chiro (UE4) -> \"Mannequin --> Connect the bones with children\"","title":"Connect the bones with children"},{"location":"edit-armature/#snap-clavicles-to-mannequin-position","text":"Moves clavicle heads to positions simiral to Mannequin, calculated relatively to \"spine_03\" bone. Edit mode -> Armature -> Chiro (UE4) -> \"Mannequin --> Snap clavicles to Mannequin position\"","title":"Snap clavicles to Mannequin position"},{"location":"edit-armature/#make-twist-bones","text":"Generates Mannequin twist bones. Calculates length and positions relatively to the parent bones. Does nothing for existing twist bones. Edit mode -> Armature -> Chiro (UE4) -> \"Mannequin --> Make twist bones\"","title":"Make twist bones"},{"location":"edit-armature/#bone-roll-t-pose","text":"Corrects the bone rolls to follow the Mannequin armature composition. Assumes the Mesh is T-Pose. WARNING : if your mesh is not in T-Pose, the rolls will not be correct Edit mode -> Armature -> Chiro (UE4) -> \"Mannequin --> Bone Roll T-Pose\"","title":"Bone Roll T-Pose"},{"location":"edit-armature/#bone-roll-a-pose-advanced","text":"Corrects the bone rolls to follow the Mannequin armature composition. Assumes the Mesh is Mannequin A-Pose. WARNING : if your mesh is not in A-Pose, the rolls will not be correct","title":"Bone Roll A-Pose (Advanced)"},{"location":"edit-armature/#make-ik-bones-advanced","text":"Generates IK bones for the armature. Same as Add Armature -> Mannequin IK Bones","title":"Make IK bones (Advanced)"},{"location":"edit-armature/#chiropract-on-armature-advanced","text":"Corrects the bone arrangement so that it follows The Original Mannequin armature. After this operation the character may be exported to FBX (with YX axis).","title":"Chiropract on Armature (Advanced)"},{"location":"export-fbx/","text":"Export FBX Export to FBX with autocorrection. Does not change anything in the open blend scene or file. This operation: corrects the scale (no need to mess with the scene unit scale) corrects the bone rotations so they match the Mannequin origin (aka chiropract) generates IK bones (if they don't exist yet) autocorrects the armature root name (\"root\" in UE4 skeleton) Exports the result into FBX File -> Export -> FBX (Chiro UE4 Mannequin) -> Save as ... Warning You only choose the file name. The folder is of the original blend file","title":"Export FBX"},{"location":"export-fbx/#export-fbx","text":"Export to FBX with autocorrection. Does not change anything in the open blend scene or file. This operation: corrects the scale (no need to mess with the scene unit scale) corrects the bone rotations so they match the Mannequin origin (aka chiropract) generates IK bones (if they don't exist yet) autocorrects the armature root name (\"root\" in UE4 skeleton) Exports the result into FBX File -> Export -> FBX (Chiro UE4 Mannequin) -> Save as ... Warning You only choose the file name. The folder is of the original blend file","title":"Export FBX"},{"location":"getting-started/","text":"Getting Started Installation section explains how to download and install the add-on. How To section How To articles explain some of the common scenarios and how to use the add-on features. Skinning explains how to skin a mesh using the Chiro add-on Mixamo Re-Skin explains how to swap Mixamo armature with Mannequin skeleton UE4 Retargeting explains some basics about Unreal Engine 4 animation retargeting Tools Overview That section describes the Chiro add-on features split by categories.","title":"Getting Started"},{"location":"getting-started/#getting-started","text":"Installation section explains how to download and install the add-on.","title":"Getting Started"},{"location":"getting-started/#how-to-section","text":"How To articles explain some of the common scenarios and how to use the add-on features. Skinning explains how to skin a mesh using the Chiro add-on Mixamo Re-Skin explains how to swap Mixamo armature with Mannequin skeleton UE4 Retargeting explains some basics about Unreal Engine 4 animation retargeting","title":"How To section"},{"location":"getting-started/#tools-overview","text":"That section describes the Chiro add-on features split by categories.","title":"Tools Overview"},{"location":"installation/","text":"Installation Download You may download releases from: GitHub Release page Install You may install the addon in any way supported by Blender. Configuration There are 2 configuration options. They enable extra features not needed for most of the usual workflows. Advanced features (disabled). This option makes some advanced tools to appear in UI. Most of those are used internally by other tools and are not required for straightforward use. Developer mode (disabled). This option makes a developer UI panel to show up. The panel comprises tools only needed for developers of this addon and not required for any usual workflows.","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#download","text":"You may download releases from: GitHub Release page","title":"Download"},{"location":"installation/#install","text":"You may install the addon in any way supported by Blender.","title":"Install"},{"location":"installation/#configuration","text":"There are 2 configuration options. They enable extra features not needed for most of the usual workflows. Advanced features (disabled). This option makes some advanced tools to appear in UI. Most of those are used internally by other tools and are not required for straightforward use. Developer mode (disabled). This option makes a developer UI panel to show up. The panel comprises tools only needed for developers of this addon and not required for any usual workflows.","title":"Configuration"},{"location":"re-pose/","text":"RePose character Re-Pose Mannequin A-Pose Pose Mode -> Pose -> Re-Pose (Chiro UE4) -> \"Mannequin --> A-Pose\" Re-Pose Mannequin T-Pose Pose Mode -> Pose -> Re-Pose (Chiro UE4) -> \"Mannequin --> T-Pose\"","title":"Re-Pose"},{"location":"re-pose/#repose-character","text":"","title":"RePose character"},{"location":"re-pose/#re-pose-mannequin-a-pose","text":"Pose Mode -> Pose -> Re-Pose (Chiro UE4) -> \"Mannequin --> A-Pose\"","title":"Re-Pose Mannequin A-Pose"},{"location":"re-pose/#re-pose-mannequin-t-pose","text":"Pose Mode -> Pose -> Re-Pose (Chiro UE4) -> \"Mannequin --> T-Pose\"","title":"Re-Pose Mannequin T-Pose"},{"location":"select-bone-group/","text":"Select bone group Mannequin Twist Bones Select all Twist bones in the Mannequin armature The twist bones are: upperarm_twist_01_l upperarm_twist_01_r lowerarm_twist_01_l lowerarm_twist_01_r thigh_twist_01_l thigh_twist_01_r calf_twist_01_l calf_twist_01_r Edit Mode -> Select -> Select Bone Group (Chiro UE4) -> \"Mannequin --> Twist Bones\" or Pose Mode -> Select -> Select Bone Group (Chiro UE4) -> \"Mannequin --> Twist Bones\" Palm Bones Select all Palm bones in the Mannequin armature The palm bones are hands and all fingers (32 bones in total). Edit Mode -> Select -> Select Bone Group (Chiro UE4) -> \"Mannequin --> Palm\" or Pose Mode -> Select -> Select Bone Group (Chiro UE4) -> \"Mannequin --> Palm\" IK Bones The IK bones are: ik_hand_root ik_hand_gun ik_hand_l ik_hand_r ik_foot_root ik_foot_l ik_foot_r Select all IK bones in the Mannequin armature Edit Mode -> Select -> Select Bone Group (Chiro UE4) -> \"Mannequin --> IK Bones\" or Pose Mode -> Select -> Select Bone Group (Chiro UE4) -> \"Mannequin --> IK Bones\"","title":"Select Bones"},{"location":"select-bone-group/#select-bone-group","text":"","title":"Select bone group"},{"location":"select-bone-group/#mannequin","text":"","title":"Mannequin"},{"location":"select-bone-group/#twist-bones","text":"Select all Twist bones in the Mannequin armature The twist bones are: upperarm_twist_01_l upperarm_twist_01_r lowerarm_twist_01_l lowerarm_twist_01_r thigh_twist_01_l thigh_twist_01_r calf_twist_01_l calf_twist_01_r Edit Mode -> Select -> Select Bone Group (Chiro UE4) -> \"Mannequin --> Twist Bones\" or Pose Mode -> Select -> Select Bone Group (Chiro UE4) -> \"Mannequin --> Twist Bones\"","title":"Twist Bones"},{"location":"select-bone-group/#palm-bones","text":"Select all Palm bones in the Mannequin armature The palm bones are hands and all fingers (32 bones in total). Edit Mode -> Select -> Select Bone Group (Chiro UE4) -> \"Mannequin --> Palm\" or Pose Mode -> Select -> Select Bone Group (Chiro UE4) -> \"Mannequin --> Palm\"","title":"Palm Bones"},{"location":"select-bone-group/#ik-bones","text":"The IK bones are: ik_hand_root ik_hand_gun ik_hand_l ik_hand_r ik_foot_root ik_foot_l ik_foot_r Select all IK bones in the Mannequin armature Edit Mode -> Select -> Select Bone Group (Chiro UE4) -> \"Mannequin --> IK Bones\" or Pose Mode -> Select -> Select Bone Group (Chiro UE4) -> \"Mannequin --> IK Bones\"","title":"IK Bones"},{"location":"how-to/leah/","text":"Skin a mesh with Mannequin armature The article explains how to skin a humanoid character with a Mannequin-compatible armature (skeleton). That will allow reuse of Mannequin animations for the character via animation retargeting in Unreal Engine 4. Disclaimer This article purpose is to demonstrate the features of Chiro add-on for Blender. To achieve best results, you must do more than we cover in here. We do not correct weight paints nor set up morph targets. That is out of scope for this tutorial. Skin a mesh with Mannequin armature Intro 1. Add Armature 2. Scale Armature 3. Adjust pelvis position 4. Adjust pelvis tail 5. Adjust spine_01 6. Adjust spine_02 7. Adjust neck and head 8. Adjust clavicles 9. Left Arm 10. Fingers 11. Left leg 12. Adjust the right side 13. Apply the pose as Rest Pose 14. Parent the armature 15. T-Pose 16. Apply the pose to mesh 16.5. (Optional) Snap clavicles 17. Fix bone rolls 18. Fix feet rotation 19. A-Pose 20. Export FBX Conclusion Results Third person Advanced Locomotion System v4 Intro In this article we will skin a character mesh with a mannequin-compatible armature. The mesh proportions are not matching the Mannequin, so we will change the bones and later use retargeting manager in Unreal Engine 4 to make the animation work. The mesh does not have armature, vertex groups and weight paints. Here is the character we will be skinning 1. Add Armature The first step is to add the armature we'll be working with. To do that, find the menu and the armature to the scene. It will be easier to work if we make it show up \"In Front\", so let's do it straight away. Add -> Armature -> Chiro (UE4 Mannequin) -> A-Pose Armature sidebar -> Viewport Display -> In Front Info It does not matter if you start with the armature in A-Pose or T-Pose. In this example we start with A-Pose merely because it's closer to the mesh posture. 2. Scale Armature Now we scale the armature so its spine length following the torso size accordingly. Here are a couple guidelines you could follow to make it right pelvis root should be at the top of the groin clavicle bone tails should be just in the middle of the character shoulders Warning If you cannot find good alignment, then don't align clavicles, just make sure pelvis is in the correct position. In the following steps we will adjust all the bones one by one anyway, but it is important to begin with the pelvis in the right spot. 3. Adjust pelvis position Now we shall adjust the bone positions. However, pelvis is the root for all the other bones and it is important that we begin with it first. To find the correct position for pelvis, you could follow these guidelines. front view: top of the groin, middle of the mesh side view: middle of the mesh, middle of glutes rear view: middle of glutes, middle of the mesh To make it easier, in this step we will move pelvis into a separate layer, so the other bones don't obscure the view. To do that, we are switching to the Edit Mode . Then, we return to the Object Mode and adjust the pelvis position by dragging the armature around. 4. Adjust pelvis tail The rest of the bones we will adjust in Pose mode . Now we are correcting spine_01 position by following these guidelines front view: just below navel side view: middle of the mesh rear view: just above the pelvis Since the bones are connected, to adjust spine_01 position we will update the pelvis bone instead. In Pose Mode we will rotate pelvis and increase its Scale Y . 5. Adjust spine_01 Same here. To adjust spine_02 we will update spine_01 in Pose Mode . Rotate the bone and update its Scale Y to change the bone length. Here are the guidelines for spine_02 adjustments front view: celiac plexus (aka solar plexus), just below the ribcage, top of the abdomen side view: middle of the mesh To do this, we will move the spine_01 bone to the current layer via Edit Mode 6. Adjust spine_02 Repeating the same proceduce to adjust spine_03 position. The guidelines front view: middle of the chest side view: middle of the mesh, below the bottom of armpit, following the shape of the mesh Info To move the bone into current layer we're using shortcuts ( Shift-M and M ). If you're not comfortable with shortcuts, you could repeat the UI actions from the previous steps. The shortcuts are doing the same thing. 7. Adjust neck and head Repeating the procedure for neck and head bones. neck root guidelines: front view: root of the neck, above clavicles side view: root of the neck, just above the shoulders neck tail guidelines: side view: behind the jaw, below the ear head guidelines: parallel to face 8. Adjust clavicles The clavicle bones are the most error prone in retargeting Mannequin animations. Most likely you won't be able to find the correct position for your character from the first try. The shoulders may look broken, or positioned weirdly. To mitigate that effect, find a correct spot for clavicle bone roots. Although, for now, we are going to leave it \"as is\". Info Later we may use the \"auto-detection\" provided by the addon via Snap clavicles to Mannequin position transformation. It won't give you the best possible result, but it is \"good enough\" to begin with. The guidelines turn on X-mirror do not change clavicle root position clavicle tail should be placed in the middle of the shoulder joint 9. Left Arm Following the procedure, we're leaving X-mirror turned on and update the left arm bones. Here are some simple guidelines for that all bones should be placed in the middle of the mesh upperarm_l tail should be placed exactly at the elbow joint lowerarm_l tail should be placed exactly at the wrist joint hand_l tail should be placed at the root of the middle finger 10. Fingers Skin the fingers right is tricky. Although, if you're careful enough, the result should be good. Here are the guidelines for you: roll hand_l bone to find the correct thumb to pinky position drag roots of gingers, place them to match knuckles rotate the rest finger bones to find correct finger positions scale the bones to match finger phalanges make sure X axis of every bone except thumb looks the same way as the palm We are still using X-mirror and only dealing with the left hand. 11. Left leg Now we're ready to proceed with legs. The guidelines are: thigh_l root should be already in a good position, so we don't touch it thigh_l tail should be placed in the knee joint calf_l tail should be placed at the ankle joint foot_l tail should be placed at the beginning of the toes ball_l should be aligned straight forward We're still using X-mirror and only adjust left leg bones. In the process we're also using Select Bone Group: Twist Bones to select all twist bones and move them into a different layer, so they don't obscure the view. 12. Adjust the right side Ideally the mesh will by symmetrical along the X axis. However, the world is not ideal, so we should account for the differences between the left and right sides of the mesh. Turn OFF X-mirror Correct right arm, palm, fingers and leg 13. Apply the pose as Rest Pose We have the armature in the correct pose precisely following the mesh posture and proportions. Now we need to apply all our changes to the armature by applying the pose as Rest Pose. 14. Parent the armature It is time to parent the mesh with the armature. Ideally you may like to amend the weight paints for the vertex groups, but for the brevity of this tutorial we will use auto-weights and leave it as is. This will give us good enough result for now. 15. T-Pose A requirement for the armature to be mannequin-compatible is correct bone rolls. The Chiro add-on has built-in functionality to correct the rolls. However, to do so properly it needs the character to be in T-Pose. Thus, we will put our mesh into T-Pose now. Here are the guidelines Face: looking straight forward, head is aligned by Z axis Feet: looking straight forward, parallel to the floor Arms: aligned by X axis, parallel to the floor Upper arms: parallel to the floor Elbows: looking straight back (towards Y axis) Palms: parallel to the floor 16. Apply the pose to mesh Before we move on, we need to put the mesh into the new T pose at rest. To do so, we will use Apply Pose to Mesh & as Rest feature. Without it, the mesh will keep its original form and not the T-Pose we've just made for it. Pose -> Apply -> Apply Pose to Mesh & as Rest (Chiro) 16.5. (Optional) Snap clavicles This step is optional, because it may have different results depending on the character. Sometimes it may help with shoulders, sometimes it would make things worse. You should try both ways and choose the best option that suits your character anatomy. Info If you are skinning your character for the first time, we are recommending to skip this step and come back later to try this option if you find that your character shoulders aren't looking properly. We also encourage you to save the progress you've made so far in a separate blend file, so you could come back to this step later and rework not from the very beginning, but from this step. To do that we will use Snap clavicles to Mannequin position transformation. Find and press in the menu: Armature -> Chiro (UE4) -> Mannequin --> Snap clavicles to Mannequin position 17. Fix bone rolls Now we should be able to correct the bone rolls via the Bone Roll T-Pose transformation. Switch to Edit Mode Armature -> Chiro (UE4) -> Mannequin --> Bone Roll T-Pose 18. Fix feet rotation The Bone Roll T-Pose transformation will try to detect the best rotation. However, depending on the actual mesh pose, it will not be correct for some bones. Particularly, if the feet of the mesh don't look straight forward, the roll may be incorrect. Not a big problem. We can fix the rolls manually. To do that: Make sure X-Mirror is turned OFF fix the left foot roll so X axis looks down fix the right foot roll so X axis looks up Warning If your mesh has asymmetry, X-mirror will dislocate the bones, this is why we turn it off Info In this video, we're hiding the obstructive bones by selecting them and pressing H on keyboard. To unhide them later you can press Alt+H . 19. A-Pose The final step before it's ready for exporting. The add-on Export FBX operator relies on the armature to be in A-Pose to correct the bone rotations and make it compatible with the Mannequin armature. Thus, the last step before exporting is to pose it into A-Pose and apply it to the mesh. Similar to what we did with T-Pose before. Go to Pose mode Find and press in menu Pose -> Re-Pose (Chiro UE4) -> \"Mannequin --> A-Pose\" Find and press in menu Pose -> Apply -> Apply Pose to Mesh & as Rest (Chiro) 20. Export FBX Now it is ready for exporting to FBX. However, the add-on has its own Export FBX operator, that uses correct export settings and takes care about some extra stuff that you rarely want to do manually. For more details on the Export FBX operator, see its own documentation section. Note Export FBX operator saves files into the same folder with your current .blend file Warning The export may take some time. Wait until the dropdown disappears from the screen. Info If the proportions of your character are exactly the same as Mannequin (e.g. you did not update any bone scales, only rotations), you might import it with the Mannequin skeleton and reuse animations with no retargeting required. If the proportions are different, you will need retargeting. File -> Export -> FBX (Chiro UE4 Mannequin) -> Save as ***.fbx Step 10: Export to FBX Conclusion The resulting FBX file is ready for use in Unreal Engine 4 with default import settings. Although, most likely it will need animation retargeting in Unreal Engine 4. If you are not sure how to do that, read HowTo: UE4 Retargeting . Results Warning These results are not ideal, because we did not do manual weight painting and mesh correction. The goal is to show you what the add-on is capable of, not to teach how to skin characters professionaly. Third person The result Advanced Locomotion System v4 The result","title":"Skinning"},{"location":"how-to/leah/#skin-a-mesh-with-mannequin-armature","text":"The article explains how to skin a humanoid character with a Mannequin-compatible armature (skeleton). That will allow reuse of Mannequin animations for the character via animation retargeting in Unreal Engine 4. Disclaimer This article purpose is to demonstrate the features of Chiro add-on for Blender. To achieve best results, you must do more than we cover in here. We do not correct weight paints nor set up morph targets. That is out of scope for this tutorial. Skin a mesh with Mannequin armature Intro 1. Add Armature 2. Scale Armature 3. Adjust pelvis position 4. Adjust pelvis tail 5. Adjust spine_01 6. Adjust spine_02 7. Adjust neck and head 8. Adjust clavicles 9. Left Arm 10. Fingers 11. Left leg 12. Adjust the right side 13. Apply the pose as Rest Pose 14. Parent the armature 15. T-Pose 16. Apply the pose to mesh 16.5. (Optional) Snap clavicles 17. Fix bone rolls 18. Fix feet rotation 19. A-Pose 20. Export FBX Conclusion Results Third person Advanced Locomotion System v4","title":"Skin a mesh with Mannequin armature"},{"location":"how-to/leah/#intro","text":"In this article we will skin a character mesh with a mannequin-compatible armature. The mesh proportions are not matching the Mannequin, so we will change the bones and later use retargeting manager in Unreal Engine 4 to make the animation work. The mesh does not have armature, vertex groups and weight paints. Here is the character we will be skinning","title":"Intro"},{"location":"how-to/leah/#1-add-armature","text":"The first step is to add the armature we'll be working with. To do that, find the menu and the armature to the scene. It will be easier to work if we make it show up \"In Front\", so let's do it straight away. Add -> Armature -> Chiro (UE4 Mannequin) -> A-Pose Armature sidebar -> Viewport Display -> In Front Info It does not matter if you start with the armature in A-Pose or T-Pose. In this example we start with A-Pose merely because it's closer to the mesh posture.","title":"1. Add Armature"},{"location":"how-to/leah/#2-scale-armature","text":"Now we scale the armature so its spine length following the torso size accordingly. Here are a couple guidelines you could follow to make it right pelvis root should be at the top of the groin clavicle bone tails should be just in the middle of the character shoulders Warning If you cannot find good alignment, then don't align clavicles, just make sure pelvis is in the correct position. In the following steps we will adjust all the bones one by one anyway, but it is important to begin with the pelvis in the right spot.","title":"2. Scale Armature"},{"location":"how-to/leah/#3-adjust-pelvis-position","text":"Now we shall adjust the bone positions. However, pelvis is the root for all the other bones and it is important that we begin with it first. To find the correct position for pelvis, you could follow these guidelines. front view: top of the groin, middle of the mesh side view: middle of the mesh, middle of glutes rear view: middle of glutes, middle of the mesh To make it easier, in this step we will move pelvis into a separate layer, so the other bones don't obscure the view. To do that, we are switching to the Edit Mode . Then, we return to the Object Mode and adjust the pelvis position by dragging the armature around.","title":"3. Adjust pelvis position"},{"location":"how-to/leah/#4-adjust-pelvis-tail","text":"The rest of the bones we will adjust in Pose mode . Now we are correcting spine_01 position by following these guidelines front view: just below navel side view: middle of the mesh rear view: just above the pelvis Since the bones are connected, to adjust spine_01 position we will update the pelvis bone instead. In Pose Mode we will rotate pelvis and increase its Scale Y .","title":"4. Adjust pelvis tail"},{"location":"how-to/leah/#5-adjust-spine_01","text":"Same here. To adjust spine_02 we will update spine_01 in Pose Mode . Rotate the bone and update its Scale Y to change the bone length. Here are the guidelines for spine_02 adjustments front view: celiac plexus (aka solar plexus), just below the ribcage, top of the abdomen side view: middle of the mesh To do this, we will move the spine_01 bone to the current layer via Edit Mode","title":"5. Adjust spine_01"},{"location":"how-to/leah/#6-adjust-spine_02","text":"Repeating the same proceduce to adjust spine_03 position. The guidelines front view: middle of the chest side view: middle of the mesh, below the bottom of armpit, following the shape of the mesh Info To move the bone into current layer we're using shortcuts ( Shift-M and M ). If you're not comfortable with shortcuts, you could repeat the UI actions from the previous steps. The shortcuts are doing the same thing.","title":"6. Adjust spine_02"},{"location":"how-to/leah/#7-adjust-neck-and-head","text":"Repeating the procedure for neck and head bones. neck root guidelines: front view: root of the neck, above clavicles side view: root of the neck, just above the shoulders neck tail guidelines: side view: behind the jaw, below the ear head guidelines: parallel to face","title":"7. Adjust neck and head"},{"location":"how-to/leah/#8-adjust-clavicles","text":"The clavicle bones are the most error prone in retargeting Mannequin animations. Most likely you won't be able to find the correct position for your character from the first try. The shoulders may look broken, or positioned weirdly. To mitigate that effect, find a correct spot for clavicle bone roots. Although, for now, we are going to leave it \"as is\". Info Later we may use the \"auto-detection\" provided by the addon via Snap clavicles to Mannequin position transformation. It won't give you the best possible result, but it is \"good enough\" to begin with. The guidelines turn on X-mirror do not change clavicle root position clavicle tail should be placed in the middle of the shoulder joint","title":"8. Adjust clavicles"},{"location":"how-to/leah/#9-left-arm","text":"Following the procedure, we're leaving X-mirror turned on and update the left arm bones. Here are some simple guidelines for that all bones should be placed in the middle of the mesh upperarm_l tail should be placed exactly at the elbow joint lowerarm_l tail should be placed exactly at the wrist joint hand_l tail should be placed at the root of the middle finger","title":"9. Left Arm"},{"location":"how-to/leah/#10-fingers","text":"Skin the fingers right is tricky. Although, if you're careful enough, the result should be good. Here are the guidelines for you: roll hand_l bone to find the correct thumb to pinky position drag roots of gingers, place them to match knuckles rotate the rest finger bones to find correct finger positions scale the bones to match finger phalanges make sure X axis of every bone except thumb looks the same way as the palm We are still using X-mirror and only dealing with the left hand.","title":"10. Fingers"},{"location":"how-to/leah/#11-left-leg","text":"Now we're ready to proceed with legs. The guidelines are: thigh_l root should be already in a good position, so we don't touch it thigh_l tail should be placed in the knee joint calf_l tail should be placed at the ankle joint foot_l tail should be placed at the beginning of the toes ball_l should be aligned straight forward We're still using X-mirror and only adjust left leg bones. In the process we're also using Select Bone Group: Twist Bones to select all twist bones and move them into a different layer, so they don't obscure the view.","title":"11. Left leg"},{"location":"how-to/leah/#12-adjust-the-right-side","text":"Ideally the mesh will by symmetrical along the X axis. However, the world is not ideal, so we should account for the differences between the left and right sides of the mesh. Turn OFF X-mirror Correct right arm, palm, fingers and leg","title":"12. Adjust the right side"},{"location":"how-to/leah/#13-apply-the-pose-as-rest-pose","text":"We have the armature in the correct pose precisely following the mesh posture and proportions. Now we need to apply all our changes to the armature by applying the pose as Rest Pose.","title":"13. Apply the pose as Rest Pose"},{"location":"how-to/leah/#14-parent-the-armature","text":"It is time to parent the mesh with the armature. Ideally you may like to amend the weight paints for the vertex groups, but for the brevity of this tutorial we will use auto-weights and leave it as is. This will give us good enough result for now.","title":"14. Parent the armature"},{"location":"how-to/leah/#15-t-pose","text":"A requirement for the armature to be mannequin-compatible is correct bone rolls. The Chiro add-on has built-in functionality to correct the rolls. However, to do so properly it needs the character to be in T-Pose. Thus, we will put our mesh into T-Pose now. Here are the guidelines Face: looking straight forward, head is aligned by Z axis Feet: looking straight forward, parallel to the floor Arms: aligned by X axis, parallel to the floor Upper arms: parallel to the floor Elbows: looking straight back (towards Y axis) Palms: parallel to the floor","title":"15. T-Pose"},{"location":"how-to/leah/#16-apply-the-pose-to-mesh","text":"Before we move on, we need to put the mesh into the new T pose at rest. To do so, we will use Apply Pose to Mesh & as Rest feature. Without it, the mesh will keep its original form and not the T-Pose we've just made for it. Pose -> Apply -> Apply Pose to Mesh & as Rest (Chiro)","title":"16. Apply the pose to mesh"},{"location":"how-to/leah/#165-optional-snap-clavicles","text":"This step is optional, because it may have different results depending on the character. Sometimes it may help with shoulders, sometimes it would make things worse. You should try both ways and choose the best option that suits your character anatomy. Info If you are skinning your character for the first time, we are recommending to skip this step and come back later to try this option if you find that your character shoulders aren't looking properly. We also encourage you to save the progress you've made so far in a separate blend file, so you could come back to this step later and rework not from the very beginning, but from this step. To do that we will use Snap clavicles to Mannequin position transformation. Find and press in the menu: Armature -> Chiro (UE4) -> Mannequin --> Snap clavicles to Mannequin position","title":"16.5. (Optional) Snap clavicles"},{"location":"how-to/leah/#17-fix-bone-rolls","text":"Now we should be able to correct the bone rolls via the Bone Roll T-Pose transformation. Switch to Edit Mode Armature -> Chiro (UE4) -> Mannequin --> Bone Roll T-Pose","title":"17. Fix bone rolls"},{"location":"how-to/leah/#18-fix-feet-rotation","text":"The Bone Roll T-Pose transformation will try to detect the best rotation. However, depending on the actual mesh pose, it will not be correct for some bones. Particularly, if the feet of the mesh don't look straight forward, the roll may be incorrect. Not a big problem. We can fix the rolls manually. To do that: Make sure X-Mirror is turned OFF fix the left foot roll so X axis looks down fix the right foot roll so X axis looks up Warning If your mesh has asymmetry, X-mirror will dislocate the bones, this is why we turn it off Info In this video, we're hiding the obstructive bones by selecting them and pressing H on keyboard. To unhide them later you can press Alt+H .","title":"18. Fix feet rotation"},{"location":"how-to/leah/#19-a-pose","text":"The final step before it's ready for exporting. The add-on Export FBX operator relies on the armature to be in A-Pose to correct the bone rotations and make it compatible with the Mannequin armature. Thus, the last step before exporting is to pose it into A-Pose and apply it to the mesh. Similar to what we did with T-Pose before. Go to Pose mode Find and press in menu Pose -> Re-Pose (Chiro UE4) -> \"Mannequin --> A-Pose\" Find and press in menu Pose -> Apply -> Apply Pose to Mesh & as Rest (Chiro)","title":"19. A-Pose"},{"location":"how-to/leah/#20-export-fbx","text":"Now it is ready for exporting to FBX. However, the add-on has its own Export FBX operator, that uses correct export settings and takes care about some extra stuff that you rarely want to do manually. For more details on the Export FBX operator, see its own documentation section. Note Export FBX operator saves files into the same folder with your current .blend file Warning The export may take some time. Wait until the dropdown disappears from the screen. Info If the proportions of your character are exactly the same as Mannequin (e.g. you did not update any bone scales, only rotations), you might import it with the Mannequin skeleton and reuse animations with no retargeting required. If the proportions are different, you will need retargeting. File -> Export -> FBX (Chiro UE4 Mannequin) -> Save as ***.fbx Step 10: Export to FBX","title":"20. Export FBX"},{"location":"how-to/leah/#conclusion","text":"The resulting FBX file is ready for use in Unreal Engine 4 with default import settings. Although, most likely it will need animation retargeting in Unreal Engine 4. If you are not sure how to do that, read HowTo: UE4 Retargeting .","title":"Conclusion"},{"location":"how-to/leah/#results","text":"Warning These results are not ideal, because we did not do manual weight painting and mesh correction. The goal is to show you what the add-on is capable of, not to teach how to skin characters professionaly.","title":"Results"},{"location":"how-to/leah/#third-person","text":"The result","title":"Third person"},{"location":"how-to/leah/#advanced-locomotion-system-v4","text":"The result","title":"Advanced Locomotion System v4"},{"location":"how-to/mixamo/","text":"Re-Skin Mixamo for Unreal Engine 4 Mannequin The article explains how to swap a Miaxmo armature with a Mannequin-compatible armature via Chiro (UE4 Mannequin) add-on for Blender. Re-Skin Mixamo for Unreal Engine 4 Mannequin Intro 1. Get the character in T-Pose 2. Convert the armature to Mannequin-compatible 3. Connect the bones with children 4. Snap clavicles to Mannequin position 5. Make Twist bones 6. Roll the bones 7. Fix feet rotation 8. Fix finger rotation 9. Re-Pose the Mesh to the Mannequin A-Pose 10. Export FBX Conclusion Intro Mixamo characters may have a variety of armatures. Some of them are more compatible with Mannequin than others. The process described in here will not work for every character you find out there, but should work for some of them. Note Armatures prefixed with mixamo9: appear to be more compatible and easy to convert. Warning Most likely your character has proportions different to the Mannequin does not have twist bones and their weight painted vertex groups Thus, do not expect the character to work without later retargeting in Unreal Engine 4 the retargeted animation to fit any character perfectly 1. Get the character in T-Pose The easiest way is to download the character in T-Pose. Otherwise, you may have to pose your character manually into the T-Pose before we proceed. Important Make sure the character is placed at the origin (in the middle of the scene) 2. Convert the armature to Mannequin-compatible Now we will rename every bone of the armature into its Mannequin counterpart and also delete the redundant leaf bones. To do that, we will use Skeleton conversion transformation. Select the Armature Go to Edit mode Find and press in the menu Armature -> Chiro (UE4) -> Mixamo --> Skeleton conversion Step 2: Skeleton conversion 3. Connect the bones with children Some characters may have incorrect bone orientation. The easiest way to make sure all bones are positioned correctly (or at least similar to the Mannequin), is to connect the bone tails to children. To do that we will use Connect the bones with children transformation. Find and press in the menu: Armature -> Chiro (UE4) -> Mannequin --> Connect the bones with children Step 3: Connect the bones with children 4. Snap clavicles to Mannequin position Most likely your character T-Pose will have clavicle root positions aligned with the spine bone by the X axis. The Mannequin, however, has its clavicle roots displaced forward, which better replicates human anatomy. Later, when retargeting the Mannequin animation in Unreal Engine 4 for our character, this will make an effect of the shoulders stretched back too far, which looks like if scapulae are brought together. To reduce that effect, we can move the clavicle bone roots forward, similar to the original Mannequin armature. To do that we will use Snap clavicles to Mannequin position transformation. Find and press in the menu: Armature -> Chiro (UE4) -> Mannequin --> Snap clavicles to Mannequin position Step 4: Snap clavicles to Mannequin position 5. Make Twist bones Most likely the character does not have the Mannequin Twist bones. Even though there are no Vertex groups nor Weight paints , we still need those Twist bones to exist so that Unreal Engine 4 can work with the skeleton when we retarget Mannequin animation. This is important for the engine that all the bones exist and precisely reproduce the original skeleton hierarchy. To do that we will use Make twist bones transformation. Warning This transformation generates the bones only . It does not generate any Vertex Groups with Weights. If you want your character to be more compatible with retargeted animation, you may need to manually Weight paint those Vertex Groups. Armature -> Chiro (UE4) -> Mannequin --> Make Twist bones Step 5: Make Twist bones 6. Roll the bones The Mixamo characters have the bone heads and tails properly placed out of the box, same as the Weights for the Vertex Groups. However, an important difference with the Mannequin is the bones are rolled differently. Fret not, you don't have to re-roll every bone manually as long as your character is carefully posed in T-Pose. As long as it is the case, the add-on can detect proper rolls for every bone. Then you may correct the small bits manually if you'd like. Although, usually it will have \"good enough\" result without manual changes. Warning It is important that the Mesh is in correct T-Pose : Face: looking straight forward, head is aligned by Z axis Feet: looking straight forward, parallel to the floor Arms: aligned by X axis, parallel to the floor Upper arms: parallel to the floor Elbows: looking straight back (towards Y axis) Palms: parallel to the floor Note Usually Mixamo in T-Pose will have the correct posture out of the box. After we make sure the mesh is in the correct T-Pose, we may reroll the bones. To do that we will use Bone Roll T-Pose transformation. Armature -> Chiro (UE4) -> Mannequin --> Bone Roll T-Pose Step 6: Roll the bones 7. Fix feet rotation The Bone Roll T-Pose transformation will try to detect the best possible rotation. However, depending on the actual mesh pose, it will not be correct for some bones. Particularly, if the feet of the mesh don't look straight forward, then the roll will not be correct. Not a big problem. We can fix the rolls manually. To do that: turn on X-Mirror fix the left foot roll so X axis looks down Warning Right foot bone X-axis should look straight up, but with X-mirror that will be auto-corrected Step 7: Fix feet rotation 8. Fix finger rotation Same as with feet, finger rolls may need manual update so every X axis of every finger bone (except thumb) looks straight down, following the palm direction. turn on X-Mirror fix the left arm fingers so that X axes look down Warning The palm should be looking down as well. This is X-axis of the hand_l bone Step 8: Fix finger rotation 9. Re-Pose the Mesh to the Mannequin A-Pose Before we can export the character to FBX, we have to re-pose it into Mannequin A-Pose. This is necessary so that add-on may transform the bone rotations later when exporting to FBX. We will omit the technical details here, but this is necessary for the character to get exported correctly. To do that Go to Pose mode Find and press in menu Pose -> Re-Pose (Chiro UE4) -> \"Mannequin --> A-Pose\" Find and press in menu Pose -> Apply -> Apply Pose to Mesh & as Rest (Chiro) Step 9: Re-Pose Mesh to Mannequin A-Pose 10. Export FBX Now it is ready for exporting to FBX. However, the add-on has its own Export FBX operator, that uses correct export settings and takes care about some extra stuff that you usually don't want to do manually. For the details on the Export FBX operator, see its own documentation section. Note Export FBX operator saves files into the same folder where your current .blend file resides File -> Export -> FBX (Chiro UE4 Mannequin) -> Save as ***.fbx Step 10: Export to FBX Conclusion The resulting FBX file is ready for Unreal Engine 4 with default import settings. Although, most likely your character will need animation retargeting in Unreal Engine 4. If you are not sure how to do that, see HowTo: UE4 Retargeting . Here is the result of what we have done in this article, with animation retargeting as per HowTo: UE4 Retargeting . The result","title":"Mixamo Re-Skin"},{"location":"how-to/mixamo/#re-skin-mixamo-for-unreal-engine-4-mannequin","text":"The article explains how to swap a Miaxmo armature with a Mannequin-compatible armature via Chiro (UE4 Mannequin) add-on for Blender. Re-Skin Mixamo for Unreal Engine 4 Mannequin Intro 1. Get the character in T-Pose 2. Convert the armature to Mannequin-compatible 3. Connect the bones with children 4. Snap clavicles to Mannequin position 5. Make Twist bones 6. Roll the bones 7. Fix feet rotation 8. Fix finger rotation 9. Re-Pose the Mesh to the Mannequin A-Pose 10. Export FBX Conclusion","title":"Re-Skin Mixamo for Unreal Engine 4 Mannequin"},{"location":"how-to/mixamo/#intro","text":"Mixamo characters may have a variety of armatures. Some of them are more compatible with Mannequin than others. The process described in here will not work for every character you find out there, but should work for some of them. Note Armatures prefixed with mixamo9: appear to be more compatible and easy to convert. Warning Most likely your character has proportions different to the Mannequin does not have twist bones and their weight painted vertex groups Thus, do not expect the character to work without later retargeting in Unreal Engine 4 the retargeted animation to fit any character perfectly","title":"Intro"},{"location":"how-to/mixamo/#1-get-the-character-in-t-pose","text":"The easiest way is to download the character in T-Pose. Otherwise, you may have to pose your character manually into the T-Pose before we proceed. Important Make sure the character is placed at the origin (in the middle of the scene)","title":"1. Get the character in T-Pose"},{"location":"how-to/mixamo/#2-convert-the-armature-to-mannequin-compatible","text":"Now we will rename every bone of the armature into its Mannequin counterpart and also delete the redundant leaf bones. To do that, we will use Skeleton conversion transformation. Select the Armature Go to Edit mode Find and press in the menu Armature -> Chiro (UE4) -> Mixamo --> Skeleton conversion Step 2: Skeleton conversion","title":"2. Convert the armature to Mannequin-compatible"},{"location":"how-to/mixamo/#3-connect-the-bones-with-children","text":"Some characters may have incorrect bone orientation. The easiest way to make sure all bones are positioned correctly (or at least similar to the Mannequin), is to connect the bone tails to children. To do that we will use Connect the bones with children transformation. Find and press in the menu: Armature -> Chiro (UE4) -> Mannequin --> Connect the bones with children Step 3: Connect the bones with children","title":"3. Connect the bones with children"},{"location":"how-to/mixamo/#4-snap-clavicles-to-mannequin-position","text":"Most likely your character T-Pose will have clavicle root positions aligned with the spine bone by the X axis. The Mannequin, however, has its clavicle roots displaced forward, which better replicates human anatomy. Later, when retargeting the Mannequin animation in Unreal Engine 4 for our character, this will make an effect of the shoulders stretched back too far, which looks like if scapulae are brought together. To reduce that effect, we can move the clavicle bone roots forward, similar to the original Mannequin armature. To do that we will use Snap clavicles to Mannequin position transformation. Find and press in the menu: Armature -> Chiro (UE4) -> Mannequin --> Snap clavicles to Mannequin position Step 4: Snap clavicles to Mannequin position","title":"4. Snap clavicles to Mannequin position"},{"location":"how-to/mixamo/#5-make-twist-bones","text":"Most likely the character does not have the Mannequin Twist bones. Even though there are no Vertex groups nor Weight paints , we still need those Twist bones to exist so that Unreal Engine 4 can work with the skeleton when we retarget Mannequin animation. This is important for the engine that all the bones exist and precisely reproduce the original skeleton hierarchy. To do that we will use Make twist bones transformation. Warning This transformation generates the bones only . It does not generate any Vertex Groups with Weights. If you want your character to be more compatible with retargeted animation, you may need to manually Weight paint those Vertex Groups. Armature -> Chiro (UE4) -> Mannequin --> Make Twist bones Step 5: Make Twist bones","title":"5. Make Twist bones"},{"location":"how-to/mixamo/#6-roll-the-bones","text":"The Mixamo characters have the bone heads and tails properly placed out of the box, same as the Weights for the Vertex Groups. However, an important difference with the Mannequin is the bones are rolled differently. Fret not, you don't have to re-roll every bone manually as long as your character is carefully posed in T-Pose. As long as it is the case, the add-on can detect proper rolls for every bone. Then you may correct the small bits manually if you'd like. Although, usually it will have \"good enough\" result without manual changes. Warning It is important that the Mesh is in correct T-Pose : Face: looking straight forward, head is aligned by Z axis Feet: looking straight forward, parallel to the floor Arms: aligned by X axis, parallel to the floor Upper arms: parallel to the floor Elbows: looking straight back (towards Y axis) Palms: parallel to the floor Note Usually Mixamo in T-Pose will have the correct posture out of the box. After we make sure the mesh is in the correct T-Pose, we may reroll the bones. To do that we will use Bone Roll T-Pose transformation. Armature -> Chiro (UE4) -> Mannequin --> Bone Roll T-Pose Step 6: Roll the bones","title":"6. Roll the bones"},{"location":"how-to/mixamo/#7-fix-feet-rotation","text":"The Bone Roll T-Pose transformation will try to detect the best possible rotation. However, depending on the actual mesh pose, it will not be correct for some bones. Particularly, if the feet of the mesh don't look straight forward, then the roll will not be correct. Not a big problem. We can fix the rolls manually. To do that: turn on X-Mirror fix the left foot roll so X axis looks down Warning Right foot bone X-axis should look straight up, but with X-mirror that will be auto-corrected Step 7: Fix feet rotation","title":"7. Fix feet rotation"},{"location":"how-to/mixamo/#8-fix-finger-rotation","text":"Same as with feet, finger rolls may need manual update so every X axis of every finger bone (except thumb) looks straight down, following the palm direction. turn on X-Mirror fix the left arm fingers so that X axes look down Warning The palm should be looking down as well. This is X-axis of the hand_l bone Step 8: Fix finger rotation","title":"8. Fix finger rotation"},{"location":"how-to/mixamo/#9-re-pose-the-mesh-to-the-mannequin-a-pose","text":"Before we can export the character to FBX, we have to re-pose it into Mannequin A-Pose. This is necessary so that add-on may transform the bone rotations later when exporting to FBX. We will omit the technical details here, but this is necessary for the character to get exported correctly. To do that Go to Pose mode Find and press in menu Pose -> Re-Pose (Chiro UE4) -> \"Mannequin --> A-Pose\" Find and press in menu Pose -> Apply -> Apply Pose to Mesh & as Rest (Chiro) Step 9: Re-Pose Mesh to Mannequin A-Pose","title":"9. Re-Pose the Mesh to the Mannequin A-Pose"},{"location":"how-to/mixamo/#10-export-fbx","text":"Now it is ready for exporting to FBX. However, the add-on has its own Export FBX operator, that uses correct export settings and takes care about some extra stuff that you usually don't want to do manually. For the details on the Export FBX operator, see its own documentation section. Note Export FBX operator saves files into the same folder where your current .blend file resides File -> Export -> FBX (Chiro UE4 Mannequin) -> Save as ***.fbx Step 10: Export to FBX","title":"10. Export FBX"},{"location":"how-to/mixamo/#conclusion","text":"The resulting FBX file is ready for Unreal Engine 4 with default import settings. Although, most likely your character will need animation retargeting in Unreal Engine 4. If you are not sure how to do that, see HowTo: UE4 Retargeting . Here is the result of what we have done in this article, with animation retargeting as per HowTo: UE4 Retargeting . The result","title":"Conclusion"},{"location":"how-to/ue4-retargeting/","text":"Retarget Unreal Engine 4 Mannequin animation This article explains how to retarget Mannequin-compatible animation for a Skeletal Mesh with Mannequin-compatible skeleton (armature). The entire process happens only in Unreal Engine 4 and implies you have done FBX export with a mannequin-compatible character (perhaps following another How-To). Warning This article is not a part of the official Unreal Engine 4 documentation and may not be up to date with its latest features. Retarget Unreal Engine 4 Mannequin animation Intro 1. Import FBX 2. Select Rig for Mannequin 3. Retarget your character 4. Retarget the animation blueprint 5. Use your character and animation on the player pawn Conclusion Intro This article is an example of a retargeting procedure and does not contain the optimal retargeting settings. Every Skeletal Mesh is unique and may require different retargeting settings for achieving better results. Do not take the advice given here as the best possible for your project. 1. Import FBX Create a separate folder for the character and import the FBX file with default settings. Step 1: Import FBX 2. Select Rig for Mannequin We need the retargeting system to pick up Mannequin animation blueprints as a potential source of retargeting. For that, you may need to assign the humanoid rig to the Mannequin Skeleton. Find and Open the Mannequin Skeleton asset Open the Retarget Manager Select Humanoid Rig Save the Mannequin Skeleton Step 2: Select Rig for Mannequin 3. Retarget your character Find and Open your character skeleton asset Open the Retarget Manager Select Humanoid Rig Open Skeleton Tree Select \"Show Retargeting Options\" in the dropdown Recursively set Translation Retargeting Skeleton for all bones Set Translation Retargeting Animation for root Set Translation Retargeting Animation Scaled for pelvis Save the skeleton Step 3: Retarget your character 4. Retarget the animation blueprint Find the animation blueprint you want to retarget Choose the correct retargeting options Retarget and save the resulting assets Step 4: Retarget the animation blueprint 5. Use your character and animation on the player pawn Swap skeletal mesh with your character Choose your retargeted animation blueprint as the Anim Class Step 5: Use your character and animation on the player pawn Conclusion As the result, we can reuse the existing animation blueprints made for the Mannequin. Step 6: The result","title":"UE4 Retargeting"},{"location":"how-to/ue4-retargeting/#retarget-unreal-engine-4-mannequin-animation","text":"This article explains how to retarget Mannequin-compatible animation for a Skeletal Mesh with Mannequin-compatible skeleton (armature). The entire process happens only in Unreal Engine 4 and implies you have done FBX export with a mannequin-compatible character (perhaps following another How-To). Warning This article is not a part of the official Unreal Engine 4 documentation and may not be up to date with its latest features. Retarget Unreal Engine 4 Mannequin animation Intro 1. Import FBX 2. Select Rig for Mannequin 3. Retarget your character 4. Retarget the animation blueprint 5. Use your character and animation on the player pawn Conclusion","title":"Retarget Unreal Engine 4 Mannequin animation"},{"location":"how-to/ue4-retargeting/#intro","text":"This article is an example of a retargeting procedure and does not contain the optimal retargeting settings. Every Skeletal Mesh is unique and may require different retargeting settings for achieving better results. Do not take the advice given here as the best possible for your project.","title":"Intro"},{"location":"how-to/ue4-retargeting/#1-import-fbx","text":"Create a separate folder for the character and import the FBX file with default settings. Step 1: Import FBX","title":"1. Import FBX"},{"location":"how-to/ue4-retargeting/#2-select-rig-for-mannequin","text":"We need the retargeting system to pick up Mannequin animation blueprints as a potential source of retargeting. For that, you may need to assign the humanoid rig to the Mannequin Skeleton. Find and Open the Mannequin Skeleton asset Open the Retarget Manager Select Humanoid Rig Save the Mannequin Skeleton Step 2: Select Rig for Mannequin","title":"2. Select Rig for Mannequin"},{"location":"how-to/ue4-retargeting/#3-retarget-your-character","text":"Find and Open your character skeleton asset Open the Retarget Manager Select Humanoid Rig Open Skeleton Tree Select \"Show Retargeting Options\" in the dropdown Recursively set Translation Retargeting Skeleton for all bones Set Translation Retargeting Animation for root Set Translation Retargeting Animation Scaled for pelvis Save the skeleton Step 3: Retarget your character","title":"3. Retarget your character"},{"location":"how-to/ue4-retargeting/#4-retarget-the-animation-blueprint","text":"Find the animation blueprint you want to retarget Choose the correct retargeting options Retarget and save the resulting assets Step 4: Retarget the animation blueprint","title":"4. Retarget the animation blueprint"},{"location":"how-to/ue4-retargeting/#5-use-your-character-and-animation-on-the-player-pawn","text":"Swap skeletal mesh with your character Choose your retargeted animation blueprint as the Anim Class Step 5: Use your character and animation on the player pawn","title":"5. Use your character and animation on the player pawn"},{"location":"how-to/ue4-retargeting/#conclusion","text":"As the result, we can reuse the existing animation blueprints made for the Mannequin. Step 6: The result","title":"Conclusion"}]}